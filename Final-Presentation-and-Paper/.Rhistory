# convert hip and waist from inches to cm
pcos_data$`Hip(in)` <- round((pcos_data$`Hip(in)` * 2.54),1)
pcos_data$`Waist(in)` <- round((pcos_data$`Waist(in)` * 2.54),1)
# renaming variables
pcos_data <- pcos_data %>%
rename("Height(m)" = "Height(cm)",
"Hip(cm)" = "Hip(in)",
"Waist(cm)" = "Waist(in)")
# calculate BMI
pcos_data$BMI <- round((pcos_data$"Weight(kg)" / pcos_data$"Height(m)"^2), 1)
# calculate waist-hip ratio
pcos_data$"Waist-Hip_Ratio" <- round((pcos_data$"Waist(cm)" / pcos_data$"Hip(cm)"),2)
# calculate FSH/LH
pcos_data$"FSH-LH" <- round((pcos_data$"FSH(mIU/mL)"/pcos_data$"LH(mIU/mL)"),2)
# calculate Marriage Status
pcos_data$"Marriage_Status(yrs)"[is.na(pcos_data$"Marriage_Status(yrs)")] <- median(pcos_data$"Marriage_Status(yrs)", na.rm = T)
# calculate Fast food
pcos_data$"Fast_food"[is.na(pcos_data$"Fast_food")] <- median(pcos_data$"Fast_food", na.rm = T)
# calculate
pcos_data$"AMH(ng/mL)"[is.na(pcos_data$"AMH(ng/mL)")] <- median(pcos_data$"AMH(ng/mL)", na.rm = T)
# remove 1st column
pcos_df <- as.factor(pcos_data[-1])
pcos_df %>%
kable(format = "html", col.names = colnames(pcos_df)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "dark blue"),
data = pcos_df,
ggtheme=theme_ipsum())
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(tidyverse) # data prep
library(DataExplorer) # histograms for datasets
library(skimr) # data prep
library(rpart) # decision tree package
library(rpart.plot) # decision tree display package
library(kableExtra) # kable function for tables
library(knitr) # kable function for table
library(tidyr) # splitting data
library(ggplot2) # graphing
library(hrbrthemes) # chart customization
library(gridExtra) # layering charts
library(stringr) # data prep
library(tidymodels) # predictions
library(corrplot) # correlation plot
library(randomForest) # for the random forest
library(caret) # confusion matrix
library("e1071") #svm
library(formattable)
library(corrplot) # correlation plot
library(caret) # confusion matrix
library(neuralnet) # neural network
library(stats) # linear and logistic regression
library(gbm) # generalized boosted models
library(xgboost) # extreme gradient boosting
library(kknn) # weighted k-Nearest neighbors
#library(class)
# load the dataset from github
pcos <- read.csv("https://raw.githubusercontent.com/letisalba/Data-698/master/Data-Collection-and-Analysis/csv/PCOS_infertility.csv")
pcos2 <- read.csv("https://raw.githubusercontent.com/letisalba/Data-698/master/Data-Collection-and-Analysis/csv/PCOS_without_infertility.csv")
# display the `pcos` dataset
pcos %>%
kable(format = "html", col.names = colnames(pcos)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# display the `pcos2` dataset
pcos2 %>%
kable(format = "html", col.names = colnames(pcos2)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# summary of the pcos dataset
skim(pcos)
# summary of the pcos2 dataset
skim(pcos2)
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "#7e102c"),
data = pcos,
ggtheme=theme_ipsum())
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "#a86800"),
data = pcos2,
ggtheme=theme_ipsum())
# # boxplot of variables
# pcos_outliers <- pcos %>%
#                 gather(variable, values, 1:dim(pcos)[2])
# pcos_outliers %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# # boxplot of variables
# pcos2_outliers <- pcos2 %>%
#                 gather(variable, values, 1:dim(pcos2)[2])
# pcos2_outliers %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# # Correlation matrix
# cor_matrix <- cor(pcos[, -ncol(pcos)])
#
# # Visualize the correlation matrix using corrplot
# corrplot(cor_matrix, method = "color", tl.col = "black")
# # Correlation matrix
# cor_matrix <- cor(pcos2[, -ncol(pcos2)])
#
# # Visualize the correlation matrix using corrplot
# corrplot(cor_matrix, method = "color", tl.col = "black")
pcos <- mutate_all(pcos, function(x) as.numeric(as.character(x)))
pcos2 <- mutate_all(pcos2, function(x) as.numeric(as.character(x)))
# removing first two column for `pcos` data
# pcos <- dplyr::select(pcos, -c(1:2))
pcos <- dplyr::select(pcos, -c(2))
# renaming columns for `pcos` data
pcos <- pcos %>%
rename("Sl.No" = "Sl..No",
"PCOS" = "PCOS..Y.N.",
"Ibeta-HCG(mIU/mL)" = "I...beta.HCG.mIU.mL.",
"IIbeta-HCG(mIU/mL)" = "II....beta.HCG.mIU.mL.",
"AMH(ng/mL)" = "AMH.ng.mL." )
# removing columns not needed for `pcos_infertility` data
#pcos_infertility <- dplyr::select(pcos_infertility, -c(1:2, 17:18, 26, 45))
pcos2 <- dplyr::select(pcos2, -c(2:3, 17:18, 26, 45))
# renaming columns for `pcos_infertility` data
pcos2 <- pcos2 %>%
rename("Sl.No" = "Sl..No",
"Age(yrs)" = "Age..yrs.",
"Weight(kg)" = "Weight..Kg.",
"Height(cm)" = "Height.Cm.",
"Blood_Group" = "Blood.Group",
"Pulse rate(bpm)" = "Pulse.rate.bpm.",
"RR(breaths/min)" = "RR..breaths.min.",
"Hb(g/dl)" = "Hb.g.dl.",
"Cycle(R/I)" = "Cycle.R.I.",
"Cycle_length(days)" = "Cycle.length.days.",
"Marriage_Status(yrs)" = "Marraige.Status..Yrs.",
"Pregnant" = "Pregnant.Y.N.",
"No_of_abortions" = "No..of.aborptions",
"FSH(mIU/mL)" = "FSH.mIU.mL.",
"LH(mIU/mL)" = "LH.mIU.mL.",
"FSH-LH" = "FSH.LH",
"Hip(in)" = "Hip.inch.",
"Waist(in)" = "Waist.inch.",
"Waist-Hip_Ratio" = "Waist.Hip.Ratio",
"TSH (mIU/L)" = "TSH..mIU.L.",
"PRL(ng/mL)" = "PRL.ng.mL.",
"Vit_D3(ng/mL)" = "Vit.D3..ng.mL.",
"PRG(ng/mL)" = "PRG.ng.mL.",
"RBS(mg/dl)" = "RBS.mg.dl.",
"Weight_gain" = "Weight.gain.Y.N.",
"hair_growth" = "hair.growth.Y.N.",
"Skin_darkening" = "Skin.darkening..Y.N.",
"Hair_loss" = "Hair.loss.Y.N.",
"Pimples" = "Pimples.Y.N.",
"Fast_food" = "Fast.food..Y.N.",
"Reg_Exercise" = "Reg.Exercise.Y.N.",
"BP_Systolic(mmHg)" = "BP._Systolic..mmHg.",
"BP_Diastolic(mmHg)" = "BP._Diastolic..mmHg.",
"Follicle_No(L)" = "Follicle.No...L.",
"Follicle_No(R)" = "Follicle.No...R.",
"Avg_F_size(L)(mm)" = "Avg..F.size..L...mm.",
"Avg_F_size(R)(mm)" = "Avg..F.size..R...mm.",
"Endometrium(mm)" = "Endometrium..mm.")
# merge data sets
pcos_data <- merge(pcos, pcos2,  by=c("Sl.No"))
pcos_data %>%
kable(format = "html", col.names = colnames(pcos_data)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# convert Height from cm to
pcos_data$"Height(cm)" <- round((pcos_data$"Height(cm)" * 0.01),1)
# convert hip and waist from inches to cm
pcos_data$`Hip(in)` <- round((pcos_data$`Hip(in)` * 2.54),1)
pcos_data$`Waist(in)` <- round((pcos_data$`Waist(in)` * 2.54),1)
# renaming variables
pcos_data <- pcos_data %>%
rename("Height(m)" = "Height(cm)",
"Hip(cm)" = "Hip(in)",
"Waist(cm)" = "Waist(in)")
# calculate BMI
pcos_data$BMI <- round((pcos_data$"Weight(kg)" / pcos_data$"Height(m)"^2), 1)
# calculate waist-hip ratio
pcos_data$"Waist-Hip_Ratio" <- round((pcos_data$"Waist(cm)" / pcos_data$"Hip(cm)"),2)
# calculate FSH/LH
pcos_data$"FSH-LH" <- round((pcos_data$"FSH(mIU/mL)"/pcos_data$"LH(mIU/mL)"),2)
# calculate Marriage Status
pcos_data$"Marriage_Status(yrs)"[is.na(pcos_data$"Marriage_Status(yrs)")] <- median(pcos_data$"Marriage_Status(yrs)", na.rm = T)
# calculate Fast food
pcos_data$"Fast_food"[is.na(pcos_data$"Fast_food")] <- median(pcos_data$"Fast_food", na.rm = T)
# calculate
pcos_data$"AMH(ng/mL)"[is.na(pcos_data$"AMH(ng/mL)")] <- median(pcos_data$"AMH(ng/mL)", na.rm = T)
# remove 1st column
pcos_df <- pcos_data[-1]
pcos_df %>%
kable(format = "html", col.names = colnames(pcos_df)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "dark blue"),
data = pcos_df,
ggtheme=theme_ipsum())
# boxplot of variables
pcos_outliers2 <- pcos_df %>%
gather(variable, values, 1:dim(pcos)[2])
pcos_outliers2 %>%
ggplot() +
geom_boxplot(aes(x = variable, y = values)) +
facet_wrap(~variable, ncol = 4, scales = "free") +
theme_ipsum() +
theme(
plot.title = element_text(size=6)
)
# Correlation matrix
cor_matrix3 <- cor(pcos_df[, -ncol(pcos)])
# Visualize the correlation matrix using corrplot
corrplot(cor_matrix3, method = "color", tl.col = "black")
# # Separate the target variable
# target <- pcos_df$PCOS
# predictors <- pcos_df[, -which(names(pcos_df) == "PCOS")]
#
# # Apply outlier treatment to predictors
# # Example: Using Winsorization for outlier treatment
#
# predictors_cleaned <- predictors %>%
#   mutate_all(~ifelse(. < quantile(., 0.05), quantile(., 0.05),
#                      ifelse(. > quantile(., 0.95), quantile(., 0.95), .)))
#
# # Reconstruct the dataset with cleaned predictors and the original target variable
# pcos_df_cleaned <- cbind(predictors_cleaned, PCOS = target)
#
# # Use 'data_cleaned' for model training while keeping the original target variable unchanged
# # boxplot of the variables with the outlier parameters
# pcos_df2 <- pcos_df_cleaned %>%
#                 gather(variable, values, 1:dim(pcos_df_cleaned)[2])
# pcos_df2 %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# Separate the target variable
target <- pcos_df$PCOS
predictors <- pcos_df[, -which(names(pcos_df) == "PCOS")]
# Apply outlier treatment to predictors
# Example: Using Winsorization for outlier treatment
predictors_cleaned <- predictors %>%
mutate_all(~ifelse(. < quantile(., 0.05), quantile(., 0.05),
ifelse(. > quantile(., 0.95), quantile(., 0.95), .)))
# Reconstruct the dataset with cleaned predictors and the original target variable
pcos_df_cleaned <- cbind(predictors_cleaned, PCOS = target)
# Use 'data_cleaned' for model training while keeping the original target variable unchanged
# boxplot of the variables with the outlier parameters
pcos_df2 <- pcos_df_cleaned %>%
gather(variable, values, 1:dim(pcos_df_cleaned)[2])
pcos_df2 %>%
ggplot() +
geom_boxplot(aes(x = variable, y = values)) +
facet_wrap(~variable, ncol = 4, scales = "free") +
theme_ipsum() +
theme(
plot.title = element_text(size=6)
)
#### K-Nearest Neighbors (kknn or class):
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(tidyverse) # data prep
library(DataExplorer) # histograms for datasets
library(skimr) # data prep
library(rpart) # decision tree package
library(rpart.plot) # decision tree display package
library(kableExtra) # kable function for tables
library(knitr) # kable function for table
library(tidyr) # splitting data
library(ggplot2) # graphing
library(hrbrthemes) # chart customization
library(gridExtra) # layering charts
library(stringr) # data prep
library(tidymodels) # predictions
library(corrplot) # correlation plot
library(randomForest) # for the random forest
library(caret) # confusion matrix
library("e1071") #svm
library(formattable)
library(corrplot) # correlation plot
library(caret) # confusion matrix
library(neuralnet) # neural network
library(stats) # linear and logistic regression
library(gbm) # generalized boosted models
library(xgboost) # extreme gradient boosting
library(kknn) # weighted k-Nearest neighbors
#library(class)
# load the dataset from github
pcos <- read.csv("https://raw.githubusercontent.com/letisalba/Data-698/master/Data-Collection-and-Analysis/csv/PCOS_infertility.csv")
pcos2 <- read.csv("https://raw.githubusercontent.com/letisalba/Data-698/master/Data-Collection-and-Analysis/csv/PCOS_without_infertility.csv")
# display the `pcos` dataset
pcos %>%
kable(format = "html", col.names = colnames(pcos)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# display the `pcos2` dataset
pcos2 %>%
kable(format = "html", col.names = colnames(pcos2)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# summary of the pcos dataset
skim(pcos)
# summary of the pcos2 dataset
skim(pcos2)
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "#7e102c"),
data = pcos,
ggtheme=theme_ipsum())
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "#a86800"),
data = pcos2,
ggtheme=theme_ipsum())
# # boxplot of variables
# pcos_outliers <- pcos %>%
#                 gather(variable, values, 1:dim(pcos)[2])
# pcos_outliers %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# # boxplot of variables
# pcos2_outliers <- pcos2 %>%
#                 gather(variable, values, 1:dim(pcos2)[2])
# pcos2_outliers %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# # Correlation matrix
# cor_matrix <- cor(pcos[, -ncol(pcos)])
#
# # Visualize the correlation matrix using corrplot
# corrplot(cor_matrix, method = "color", tl.col = "black")
# # Correlation matrix
# cor_matrix <- cor(pcos2[, -ncol(pcos2)])
#
# # Visualize the correlation matrix using corrplot
# corrplot(cor_matrix, method = "color", tl.col = "black")
pcos <- mutate_all(pcos, function(x) as.numeric(as.character(x)))
pcos2 <- mutate_all(pcos2, function(x) as.numeric(as.character(x)))
# removing first two column for `pcos` data
# pcos <- dplyr::select(pcos, -c(1:2))
pcos <- dplyr::select(pcos, -c(2))
# renaming columns for `pcos` data
pcos <- pcos %>%
rename("Sl.No" = "Sl..No",
"PCOS" = "PCOS..Y.N.",
"Ibeta-HCG(mIU/mL)" = "I...beta.HCG.mIU.mL.",
"IIbeta-HCG(mIU/mL)" = "II....beta.HCG.mIU.mL.",
"AMH(ng/mL)" = "AMH.ng.mL." )
# removing columns not needed for `pcos_infertility` data
#pcos_infertility <- dplyr::select(pcos_infertility, -c(1:2, 17:18, 26, 45))
pcos2 <- dplyr::select(pcos2, -c(2:3, 17:18, 26, 45))
# renaming columns for `pcos_infertility` data
pcos2 <- pcos2 %>%
rename("Sl.No" = "Sl..No",
"Age(yrs)" = "Age..yrs.",
"Weight(kg)" = "Weight..Kg.",
"Height(cm)" = "Height.Cm.",
"Blood_Group" = "Blood.Group",
"Pulse rate(bpm)" = "Pulse.rate.bpm.",
"RR(breaths/min)" = "RR..breaths.min.",
"Hb(g/dl)" = "Hb.g.dl.",
"Cycle(R/I)" = "Cycle.R.I.",
"Cycle_length(days)" = "Cycle.length.days.",
"Marriage_Status(yrs)" = "Marraige.Status..Yrs.",
"Pregnant" = "Pregnant.Y.N.",
"No_of_abortions" = "No..of.aborptions",
"FSH(mIU/mL)" = "FSH.mIU.mL.",
"LH(mIU/mL)" = "LH.mIU.mL.",
"FSH-LH" = "FSH.LH",
"Hip(in)" = "Hip.inch.",
"Waist(in)" = "Waist.inch.",
"Waist-Hip_Ratio" = "Waist.Hip.Ratio",
"TSH (mIU/L)" = "TSH..mIU.L.",
"PRL(ng/mL)" = "PRL.ng.mL.",
"Vit_D3(ng/mL)" = "Vit.D3..ng.mL.",
"PRG(ng/mL)" = "PRG.ng.mL.",
"RBS(mg/dl)" = "RBS.mg.dl.",
"Weight_gain" = "Weight.gain.Y.N.",
"hair_growth" = "hair.growth.Y.N.",
"Skin_darkening" = "Skin.darkening..Y.N.",
"Hair_loss" = "Hair.loss.Y.N.",
"Pimples" = "Pimples.Y.N.",
"Fast_food" = "Fast.food..Y.N.",
"Reg_Exercise" = "Reg.Exercise.Y.N.",
"BP_Systolic(mmHg)" = "BP._Systolic..mmHg.",
"BP_Diastolic(mmHg)" = "BP._Diastolic..mmHg.",
"Follicle_No(L)" = "Follicle.No...L.",
"Follicle_No(R)" = "Follicle.No...R.",
"Avg_F_size(L)(mm)" = "Avg..F.size..L...mm.",
"Avg_F_size(R)(mm)" = "Avg..F.size..R...mm.",
"Endometrium(mm)" = "Endometrium..mm.")
# merge data sets
pcos_data <- merge(pcos, pcos2,  by=c("Sl.No"))
pcos_data %>%
kable(format = "html", col.names = colnames(pcos_data)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
# convert Height from cm to
pcos_data$"Height(cm)" <- round((pcos_data$"Height(cm)" * 0.01),1)
# convert hip and waist from inches to cm
pcos_data$`Hip(in)` <- round((pcos_data$`Hip(in)` * 2.54),1)
pcos_data$`Waist(in)` <- round((pcos_data$`Waist(in)` * 2.54),1)
# renaming variables
pcos_data <- pcos_data %>%
rename("Height(m)" = "Height(cm)",
"Hip(cm)" = "Hip(in)",
"Waist(cm)" = "Waist(in)")
# calculate BMI
pcos_data$BMI <- round((pcos_data$"Weight(kg)" / pcos_data$"Height(m)"^2), 1)
# calculate waist-hip ratio
pcos_data$"Waist-Hip_Ratio" <- round((pcos_data$"Waist(cm)" / pcos_data$"Hip(cm)"),2)
# calculate FSH/LH
pcos_data$"FSH-LH" <- round((pcos_data$"FSH(mIU/mL)"/pcos_data$"LH(mIU/mL)"),2)
# calculate Marriage Status
pcos_data$"Marriage_Status(yrs)"[is.na(pcos_data$"Marriage_Status(yrs)")] <- median(pcos_data$"Marriage_Status(yrs)", na.rm = T)
# calculate Fast food
pcos_data$"Fast_food"[is.na(pcos_data$"Fast_food")] <- median(pcos_data$"Fast_food", na.rm = T)
# calculate
pcos_data$"AMH(ng/mL)"[is.na(pcos_data$"AMH(ng/mL)")] <- median(pcos_data$"AMH(ng/mL)", na.rm = T)
# remove 1st column
pcos_df <- pcos_data[-1]
pcos_df %>%
kable(format = "html", col.names = colnames(pcos_df)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
DataExplorer::plot_histogram(
geom_histogram_args = list(alpha = 1, fill = "dark blue"),
data = pcos_df,
ggtheme=theme_ipsum())
# Correlation matrix
cor_matrix3 <- cor(pcos_df[, -ncol(pcos)])
# Visualize the correlation matrix using corrplot
corrplot(cor_matrix3, method = "color", tl.col = "black")
# boxplot of the variables with the outlier parameters
pcos_df2 <- pcos_df %>%
gather(variable, values, 1:dim(pcos_df)[2])
pcos_df2 %>%
ggplot() +
geom_boxplot(aes(x = variable, y = values)) +
facet_wrap(~variable, ncol = 4, scales = "free") +
theme_ipsum() +
theme(
plot.title = element_text(size=6)
)
# # Separate the target variable
# target <- pcos_df$PCOS
# predictors <- pcos_df[, -which(names(pcos_df) == "PCOS")]
#
# # Apply outlier treatment to predictors
# # Example: Using Winsorization for outlier treatment
#
# predictors_cleaned <- predictors %>%
#   mutate_all(~ifelse(. < quantile(., 0.05), quantile(., 0.05),
#                      ifelse(. > quantile(., 0.95), quantile(., 0.95), .)))
#
# # Reconstruct the dataset with cleaned predictors and the original target variable
# pcos_df_cleaned <- cbind(predictors_cleaned, PCOS = target)
# Use 'data_cleaned' for model training while keeping the original target variable unchanged
# # boxplot of the variables with the outlier parameters
# pcos_df2 <- pcos_df_cleaned %>%
#                 gather(variable, values, 1:dim(pcos_df_cleaned)[2])
# pcos_df2 %>%
#   ggplot() +
#   geom_boxplot(aes(x = variable, y = values)) +
#   facet_wrap(~variable, ncol = 4, scales = "free") +
#   theme_ipsum() +
#     theme(
#       plot.title = element_text(size=6)
#     )
# Separate the target variable
target <- pcos_df$PCOS
predictors <- pcos_df[, -which(names(pcos_df) == "PCOS")]
# Apply outlier treatment to predictors
# Example: Using Winsorization for outlier treatment
predictors_cleaned <- predictors %>%
mutate_all(~ifelse(. < quantile(., 0.05), quantile(., 0.05),
ifelse(. > quantile(., 0.95), quantile(., 0.95), .)))
# Reconstruct the dataset with cleaned predictors and the original target variable
pcos_df_cleaned <- cbind(predictors_cleaned, PCOS = target)
# Use 'data_cleaned' for model training while keeping the original target variable unchanged
# boxplot of the variables with the outlier parameters
pcos_df2 <- pcos_df_cleaned %>%
gather(variable, values, 1:dim(pcos_df_cleaned)[2])
pcos_df2 %>%
ggplot() +
geom_boxplot(aes(x = variable, y = values)) +
facet_wrap(~variable, ncol = 4, scales = "free") +
theme_ipsum() +
theme(
plot.title = element_text(size=6)
)
